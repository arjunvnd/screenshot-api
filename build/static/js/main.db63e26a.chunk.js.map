{"version":3,"sources":["components/Buttons/PrimaryButton.js","App.js","reportWebVitals.js","index.js"],"names":["SuccessButton","title","handleClick","props","onClick","type","defaultProps","App","useState","urlValue","setUrlValue","handleScreenshotClick","a","axios","get","responseType","reponse","FileSaver","saveAs","Blob","data","value","onChange","e","target","PrimaryButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGA,SAASA,EAAT,GAA0D,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAgBC,EAAS,uCACvD,OACE,mCACE,kDAAYA,GAAZ,IAAmBC,QAASF,EAAaG,KAAK,SAA9C,SACGJ,OAWTD,EAAcM,aAAe,CAC3BJ,YAAa,kBAAM,MACnBD,MAAO,IAGMD,Q,kCCWAO,MA5Bf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,KAOPC,EAAqB,uCAAG,4BAAAC,EAAA,sEACNC,IAAMC,IAAN,iCACML,GAC1B,CACEM,aAAc,gBAJU,OACtBC,EADsB,OAO3BC,IAAUC,OAAO,IAAIC,KAAK,CAACH,EAAQI,OAAO,YAPf,2CAAH,qDAU3B,OACE,qCACE,uBAAOC,MAAOZ,EAAUJ,KAAK,OAAOiB,SAhBd,SAACC,GACzBb,EAAYa,EAAEC,OAAOH,UAgBnB,cAACI,EAAD,CACExB,MAAM,oBACNC,YAAaS,QChBNe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db63e26a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SuccessButton({ title, handleClick, ...props }) {\r\n  return (\r\n    <>\r\n      <button {...props} onClick={handleClick} type=\"button\">\r\n        {title}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nSuccessButton.propTypes = {\r\n  handleClick: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\nSuccessButton.defaultProps = {\r\n  handleClick: () => null,\r\n  title: \"\",\r\n};\r\n\r\nexport default SuccessButton;\r\n","import \"./App.css\";\nimport PrimaryButton from \"./components/Buttons/PrimaryButton\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport FileSaver from \"file-saver\";\n\nfunction App() {\n  const [urlValue, setUrlValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setUrlValue(e.target.value);\n  };\n\n  const handleScreenshotClick = async () => {\n    const reponse = await axios.get(\n      `/api/screenshot?weburi=${urlValue}`,\n      {\n        responseType: \"arraybuffer\",\n      }\n    );\n     FileSaver.saveAs(new Blob([reponse.data]),'test.png')\n  };\n\n  return (\n    <>\n      <input value={urlValue} type=\"text\" onChange={handleInputChange} />\n      <PrimaryButton\n        title=\"Take a screenshot\"\n        handleClick={handleScreenshotClick}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}